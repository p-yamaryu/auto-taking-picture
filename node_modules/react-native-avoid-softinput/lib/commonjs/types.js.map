{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import type { NativeSyntheticEvent, ViewProps } from 'react-native';\n\nexport interface SoftInputEventData {\n  softInputHeight: number;\n}\n\nexport interface SoftInputAppliedOffsetEventData {\n  appliedOffset: number;\n}\n\nexport type SoftInputEasing = 'easeIn' | 'easeInOut' | 'easeOut' | 'linear';\n\nexport interface AvoidSoftInputNativeModuleType {\n  addListener: (eventType: string) => void;\n  removeListeners: (count: number) => void;\n  setAdjustNothing(): void;\n  setAdjustPan(): void;\n  setAdjustResize(): void;\n  setAdjustUnspecified(): void;\n  setAvoidOffset(offset: number): void;\n  setDefaultAppSoftInputMode(): void;\n  setEasing(easing: SoftInputEasing): void;\n  setEnabled(enabled: boolean): void;\n  setHideAnimationDelay(delay?: number): void;\n  setHideAnimationDuration(duration?: number): void;\n  setShouldMimicIOSBehavior(shouldMimic: boolean): void;\n  setShowAnimationDelay(delay?: number): void;\n  setShowAnimationDuration(duration?: number): void;\n}\n\nexport interface AvoidSoftInputViewProps extends Omit<ViewProps, 'pointerEvents'> {\n  /**\n   * @default 0\n   */\n  avoidOffset?: number;\n  /**\n   * @default 'linear'\n   */\n  easing?: SoftInputEasing;\n  /**\n   * @default true\n   */\n  enabled?: boolean;\n  /**\n   * @default (300/0) ms (iOS/Android)\n   */\n  hideAnimationDelay?: number;\n  /**\n   * @default 220 ms\n   */\n  hideAnimationDuration?: number;\n  /**\n   * @default 0 ms\n   */\n  showAnimationDelay?: number;\n  /**\n   * @default 660 ms\n   */\n  showAnimationDuration?: number;\n  onSoftInputAppliedOffsetChange?: (e: NativeSyntheticEvent<SoftInputAppliedOffsetEventData>) => void;\n  onSoftInputHeightChange?: (e: NativeSyntheticEvent<SoftInputEventData>) => void;\n  onSoftInputHidden?: (e: NativeSyntheticEvent<SoftInputEventData>) => void;\n  onSoftInputShown?: (e: NativeSyntheticEvent<SoftInputEventData>) => void;\n}\n"],"mappings":""}